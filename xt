#!/bin/bash

# xt: Manage todo lists

echo "this is deprecated in favor of taskwarrior"
exit 1

FOLDER=~/workspace/todos

usage() {
  echo "xt: Manage todos

  xt                     # List todos in current month
  xt edit                # Edit todos for current month
  xt sync                # Sync xt with git
  xt count               # No of todos left (to show in polybar)
  xt syncd               # Start sync daemon"
}

getDate() {
  date "+%Y%b"
}

getTitle() {
  d=$(date "+%Y %B")
  echo "# Todos for $d"
}

getCurrentDay() {
  d=$(date "+%b %d - %A")
  echo $d
}

getFile() {
  d=$(getDate)
  mkdir -p $FOLDER/data/$d
  f=$FOLDER/data/$d/README.md
  echo $f
}

show() {
  file=$(getFile)
  if [ ! -f $file ]; then
    echo "no entries this month"
    exit 1
  fi

  which bat &> /dev/null
  if [ $? == 0 ];then
    bat $file
  else
    cat $file
  fi
}

edit() {
  syncd &>/dev/null &
  file=$(getFile)
  if [ ! -f $file ]; then
    echo "$(getTitle)" >  $file
    echo >> $file
    echo "## $(getCurrentDay)" >> $file
    echo "- [ ] do" >> $file
  fi

  cd $FOLDER; nvim $file
  wait
}

sync() {
  cd $FOLDER ; ./git-sync;
}

count() {
  file=$(getFile)
  if [ ! -f $file ]; then
    echo "no entries this month"
    exit 1
  fi
  day=$(echo "## $(getCurrentDay)")
  sed -n -e "/$day/,/##/p" $file | awk  '{if ($2 == "[x]") done+=1; else if ($2 == "[") todo+=1} END {print "%{F#0ff}ÔÅÜ Todos:%{F-} %{F#cfc}"done+0"/"done+todo "%{F-}"}'
}

syncd() {
  cd $FOLDER ; ./git-sync-daemon
}

cmd=$1
shift


case $cmd in 
   "")
     show
;;
   edit|e)
     edit
;;
   help|-h)
     usage
;;
   sync)
     sync
;;
   syncd)
     syncd
;;
   count)
     count
;;
   *)
     usage
;;
esac
