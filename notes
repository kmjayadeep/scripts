#!/usr/bin/env bash

if [ -z "$PSUITE_NOTES_DIR" ]; then
  echo "PSUITE_NOTES_DIR not defined as environment variable"
  exit 1
fi

usage() {
  echo "notes : Take notes in markdown

  notes                   # Fuzzy finder to select a note and edit it in $EDITOR
  notes open              # Fuzzy finder to select a note and open in browser
  notes list              # List notes as a tree
  notes preview           # Preview note in bat
  notes commit mycommit   # Commit notes to git with message mycommit"
}

getFile() {
  file=$(find "$PSUITE_NOTES_DIR" -type f -name "*.md" -not -path '*/.git/*' | sed -e "s>^$PSUITE_NOTES_DIR/>>" | fzf --preview "bat --style numbers,changes --color always $PSUITE_NOTES_DIR/{}")
  echo "$file"
}

open() {
  file=$(getFile)
  if [[ -z $file ]]
  then
    echo "No file specified"
    exit 1
  fi
  $BROWSER "$PSUITE_NOTES_DIR/$file"
}

preview() {
  file=$(getFile)
  if [[ -z $file ]]
  then
    echo "No file specified"
    exit 1
  fi
  if which bat &> /dev/null;
  then
    bat -p "$PSUITE_NOTES_DIR/$file"
  else
    cat p "$PSUITE_NOTES_DIR/$file"
  fi
}

list() {
  tree "$PSUITE_NOTES_DIR" 
}

edit() {
  file=$(getFile)
  if [[ -z $file ]]
  then
    echo "No file specified"
    exit 1
  fi

  cd "$PSUITE_NOTES_DIR"; "$EDITOR" "$file"
}

# Params - Name of the markdown file being edited
# Copies the last image from Screenshots, copies to current dir
# Renames it to given name and outputs an image tag to be pasted
# Executing :!notes img %:r will pass the current file to this script
img() {
  input_file="$1"
  screenshot_dir="$HOME/media/screenshots"
  output_dir="$(dirname "$input_file")"
  file_name="$(basename "$input_file")"

  # shellcheck disable=SC2012
  recent_image="$(ls -1t "$screenshot_dir"/*.png | head -1)"

  random_name="${file_name%.*}-$(date '+%s').png"
  output_image="$output_dir/$random_name"

  cp "$recent_image" "$output_image"

  # Output the markdown image tag
  markdown_tag="![Image]($random_name)"

  echo -n "$markdown_tag" | wl-copy

  # Print the markdown tag to the terminal
  echo "$markdown_tag"
}

if [ "$#" == "0" ]; then
  edit
	exit 1
fi

cmd=$1
shift

case $cmd in 
   edit)
     edit
;;
   list)
     list
;;
   open)
     open
;;
   preview)
     preview
;;
   img)
     img "$1"
;;
   *)
     usage
     exit 1
;;
esac
